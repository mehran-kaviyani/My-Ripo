csharp
using System;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

class SmartLockSystem
{
    // FunctioN to hash the password using SHA256
    static string HashPassword(string password )
    {
        using (SHA256 sha256 = SHA256.Create())
        {
            byte[] bytes = Encoding.UTF8.GetBytes( password );
            byte[] hashBytes = sha256.ComputeHash( bytes);
            StringBuilder builder = new StringBuilder();
            foreach (byte b in hashBytes)
                builder.Append(b.ToString(" x2 "));
            return builder.ToString();
        }
    }

    static void Main()
    {
        // Stored hashed password (you can generate this using HashPassword("@15gf45Rhs" ))
        string storedPasswordHash = HashPassword("@15gf45Rhs");

        const int MAX_ATTEMPTS = 3;
        int attempts = 0;

        Console.WriteLine("üîê Welcome to the Smart Lock System");

        while (attempts < MAX_ATTEMPTS)
        {
            Console.Write("Enter your password: ");
            string userInput = Console.ReadLine();
            string userHash = HashPassword(userInput);

            if (userHash == storedPasswordHash)
            {
                Console.WriteLine("‚úÖ Access granted . Welcome to be , USER ");
                break;
            }
            else
            {
                attempts++;
                Console.WriteLine($"‚ùå Incorrect password. Attempt {attempts}/{MAX_ATTEMPTS}");
                if (attempts == MAX_ATTEMPTS)
                {
                    Console.WriteLine("üö´ Too many failed attempts! System locked for 10 seconds.");
                    Thread.Sleep(10000); // Lock system for 10 seconds
                }
            }
        }
    }
}
















